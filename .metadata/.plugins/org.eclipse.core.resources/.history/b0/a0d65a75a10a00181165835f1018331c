//============================================================================
// Name        : w2_a1.cpp
// Author      : aivanov
//============================================================================

#include <iostream>
#include <cassert>
#include <vector>

int fibonacci_naive(int n) {
    if (n <= 1)
        return n;

    return fibonacci_naive(n - 1) + fibonacci_naive(n - 2);
}

int fibonacci_fast(int n) {
	std::vector<int> fib_seq(n);
    fib_seq[0] = 0;
    fib_seq[1] = 1;
    for (auto i = 2; i < fib_seq.size(); i++){
    	fib_seq[i] = fib_seq[i-1] + fib_seq[i-2];
    }

    return fib_seq.back();
}

void test_solution() {
    assert(fibonacci_fast(3) == 2);
    assert(fibonacci_fast(10) == 55);
    for (int n = 0; n < 20; ++n)
        assert(fibonacci_fast(n) == fibonacci_naive(n));
}

int main() {
    int n = 0;
//    std::cin >> n;
//
//    std::cout << fibonacci_naive(n) << '\n';
    test_solution();
    std::cout << fibonacci_fast(n) << '\n';
    return 0;
}
